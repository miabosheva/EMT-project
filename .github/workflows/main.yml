name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Adjust this to your main branch name

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Build and Push Backend Docker Image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      run: |
        docker build -t miabosheva/project-emt-backend:latest ./backend
        docker login -u $DOCKER_USERNAME -p $DOCKER_TOKEN
        docker push miabosheva/project-emt-backend:latest

    - name: Build and Push Frontend Docker Image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      run: |
        docker build -t miabosheva/project-emt-frontend:latest ./frontend
        docker login -u $DOCKER_USERNAME -p $DOCKER_TOKEN
        docker push miabosheva/project-emt-frontend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set Up Docker
      run: |
        docker-compose -f docker-compose.yml up -d

    - name: Deploy to Docker
      run: |
        docker-compose -f docker-compose.yml exec -T backend sh -c "mvn clean install"

    # steps:
    #   - name: Checkout Repository
    #     uses: actions/checkout@v2

    #   - name: Set Up Kubernetes
    #     run: | 
    #       echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig
    #       kubectl config set-context k3d-emt-app-cluster --cluster=k3d-emt-app-cluster --user=admin@k3d-emt-app-cluster
    #       kubectl config use-context k3d-emt-app-cluster
    #   - name: Deploy to Kubernetes
    #     run: |
    #       kubectl apply -f kubernetes/deployment.yaml --validate=false
    #       kubectl wait --for=condition=available --timeout=300s deployment/emt-app-deployment 